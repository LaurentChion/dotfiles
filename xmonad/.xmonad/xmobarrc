-- http://projects.haskell.org/xmobar/
-- install xmobar with these flags: --flags="with_alsa" --flags="with_mpd" --flags="with_xft"  OR --flags="all_extensions"
-- you can find weather location codes here: http://weather.noaa.gov/index.html
Config { font    = "xft:Delugia Nerd Font:pixelsize=12:antialias=true:hinting=true"
       , additionalFonts = [ "xft:FontAwesome:pixelsize=13" ]
       , bgColor = "#272822"
       , fgColor = "#9358fe"
       , position = Top
       , lowerOnStart = True
       , hideOnStart = False
       , allDesktops = True
       , persistent = True
       , iconRoot = "/home/laurent/.xmonad/xpm/"  -- default: "."
       , commands = [ 
                    -- Battery information. This is likely to require some customization
                    -- based upon your specific hardware. Or, for a desktop you may want
                    -- to just remove this section entirely.
                     Run Battery        [ "--template" , "Batt: <acstatus>"
                             , "--Low"      , "10"        -- units: %
                             , "--High"     , "80"        -- units: %
                             , "--low"      , "#8fc029"
                             , "--normal"   , "#fba922"
                             , "--high"     , "#cc342b"

                             , "--" -- battery specific options
                                       -- discharging status
                                       , "-o"	, "<left>% (<timeleft>)"
                                       -- AC "on" status
                                       , "-O"	, "<fc=#fba922>Charging</fc>"
                                       -- charged status
                                       , "-i"	, "<fc=#8fc029>Charged</fc>"
                             ] 50
                      -- Time and date
                    ,Run Date "\xf133 %b %d %Y (%H:%M)" "date" 10
                      -- Network up and down
                    -- , Run Network "wlp4s0" ["-t", "\xf0aa <rx>kb  \xf0ab <tx>kb"] 10
                    
                    -- WIFI
                    , Run Network "wlp4s0" ["-t", "\xf0aa <rx>kb  \xf0ab <tx>kb"] 10
                    

                      -- Cpu usage in percent
                    , Run Cpu [
                        "-t", "\xf108 Cpu: (<total>%)"
                        , "--Low"      , "50"
                        , "--High"     , "85"
                        , "--low"      , "#8fc029"
                        , "--normal"   , "#fba922"
                        , "--high"     , "#cc342b"
                      ] 10
                    -- cpu activity monitor
                    --, Run MultiCpu       [ "--template" , "Cpu: <total0>%|<total1>%"
                    --         , "--Low"      , "50"         -- units: %
                    --         , "--High"     , "85"         -- units: %
                    --         , "--low"      , "#8fc029"
                    --         , "--normal"   , "#fba922"
                    --         , "--high"     , "#cc342b"
                    --         ] 10
                    
                    -- memory usage monitor
                    , Run Memory         [ "--template" ,"Mem: <usedratio>%"
                             , "--Low"      , "20"        -- units: %
                             , "--High"     , "90"        -- units: %
                             , "--low"      , "#8fc029"
                             , "--normal"   , "#fba922"
                             , "--high"     , "#cc342b"
                             ] 10
                      -- Ram used number and percent
                    --, Run Memory ["-t", "\xf233 mem: <used>M (<usedratio>%)"] 10
                    
                      -- Disk space free
                    , Run DiskU [("/", "\xf0c7 hdd: <free> free")] [] 60
                      -- Runs custom script to check for pacman updates.
                      -- This script is in my dotfiles repo in .local/bin.
                    --, Run Com "pacupdate" [] "" 3600
                      -- Runs a standard shell command 'uname -r' to get kernel version
                    , Run Com "uname" ["-r"] "" 3600
                      -- Prints out the left side items such as workspaces, layout, etc.
                      -- The workspaces are 'clickable' in my configs.
                    , Run UnsafeStdinReader
                    ]
       , sepChar = "%"
       , alignSep = "}{"
       , template = " <icon=haskell_20.xpm/> <fc=#76715e>|</fc> %UnsafeStdinReader% }{ <fc=#cfd0c2>ï…¼ %uname% </fc><fc=#76715e>| </fc><fc=#fba922>%cpu% </fc><fc=#76715e>| </fc><fc=#fa2772>%memory% </fc><fc=#76715e>| </fc><fc=#55bcce>%disku% </fc><fc=#76715e>| </fc><fc=#8fc029>%wlp4s0% </fc><fc=#76715e>|</fc><fc=#66efd5>%date%</fc><fc=#76715e>| </fc><fc=#9358fe>%battery%</fc>"
       }
